"""new col

Revision ID: b888ebc1311a
Revises: 5d3d3de57c1e
Create Date: 2025-10-10 10:38:33.950825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b888ebc1311a'
down_revision: Union[str, None] = '5d3d3de57c1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('webhook_logs',
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('scan_id', sa.String(), nullable=False),
    sa.Column('webhook_url', sa.Text(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['scan_results.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('scan_results', sa.Column('user_id', sa.String(), nullable=True))
    op.create_foreign_key(None, 'scan_results', 'users', ['user_id'], ['id'])
    op.drop_column('scan_results', 'timestamp')
    op.add_column('users', sa.Column('phone', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('full_name', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('company', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('webhook_url', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('api_limit', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('trial_end_date', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('plan_type', sa.String(length=50), nullable=True))
    op.create_unique_constraint(None, 'users', ['phone'])
    op.drop_column('users', 'tenant_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('tenant_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'plan_type')
    op.drop_column('users', 'trial_end_date')
    op.drop_column('users', 'api_limit')
    op.drop_column('users', 'webhook_url')
    op.drop_column('users', 'is_admin')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'company')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'phone')
    op.add_column('scan_results', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'scan_results', type_='foreignkey')
    op.drop_column('scan_results', 'user_id')
    op.drop_table('webhook_logs')
    # ### end Alembic commands ###
